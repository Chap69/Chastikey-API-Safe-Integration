Goals
--------------
In the first version of the safe, I am seeking functionality; therefore, my primary focus is developing a safe which can be locked/unlocked using the Chastikey API while minimizing the abilities of a lockee to open the safe early. Version 1 will not unlock the safe until the real version (if fake copies were made) of a lock has ended, eliminating the possibility of a lockee writing down or memorizing a combination. The safe is designed to be powered off for the majority of the time and should be powered on only to check to see if the safe is to be unlocked. 

If I develop a later version, I may add functionalities which alert the keyholder if the computer detects that the safe is being tampered with (accelerometers, other force sensors). This second version would be designed to be powered on all the time and notify the KH if it has been powered off or disconnected from the network and for how long as these could be moment of tampering. 


Setup
------------
Safe's Gmail
	You will need to create a gmail account to be used by the safe. You will need to enable IMAP in Gmail settings. You will also need to allow less secure apps to use this account. Links for details below.
	Enabling IMAP (stop after step 1): https://support.google.com/mail/answer/7126229?p=BadCredentials&visit_id=636918567872219421-1659186675&rd=2#cantsignin
	Allow less secure apps: https://support.google.com/accounts/answer/6010255

Concerns
-------------
- The metal safe may act like a Faraday cage, preventing Wi-fi and bluetooth signals from being sent. If so a Raspberry Pi with an ethernet port and an external bluetooth dongle may need to be used.


Updates
-------------
Gmail Notifications
- Program now emails both KH and lockee notifications about safe unlocking/locking.
Mechanism to trigger StatusCheck.py script to run?
- I've decided the simplest, most reliable method for triggering StatusCheck.py is via powercycling the safe. 
	

Major Features I'm Working on
-------------
1. Power On Notifications


2. Emergency/Remote Interface
	In the unlikely event Chastikey's API can not be contacted, I plan to include a SSH or VNC for a KH to access the Pi remotely. The lockee would not know this login. For a further point of security, I may try to have the system enable a remote connection only when Chastikey cannot be reached. 
	

3. Headless Wi-fi Configuration
	I still need to configure a version of BerryLan to run the R Pi. BerryLan will allow lockee to update safe's wifi network settings using bluetooth. This also prevents a lockee from interfacing directly with the computer during a lockup.


Small Things I'd Like to Add
---------------
- Safe emails utilizing the real subject line of an email apart from just putting "Subject:" in the body of the email. 
 

